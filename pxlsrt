#! python

from PIL import Image
import numpy as np
import sys

def sort_pixels_by_color(input_image_path, output_image_path):
    """
    Sorts pixels in an image by color and creates a new image from the sorted pixels.

    Parameters:
        input_image_path (str): Path to the input image.
        output_image_path (str): Path to save the output image.
    """
    # Open the image and convert it to RGB
    img = Image.open(input_image_path).convert("RGB")

    # Convert the image to a numpy array
    pixels = np.array(img)

    # Flatten the image into a list of pixels
    flat_pixels = pixels.reshape(-1, 3)

    # Sort pixels by color (R, G, B)
    sorted_pixels = np.array(sorted(flat_pixels, key=lambda x: (x[0], x[1], x[2])))

    # Reshape the sorted pixels back into the original image shape
    sorted_image_array = sorted_pixels.reshape(pixels.shape)

    # Create a new image from the sorted pixel array
    sorted_image = Image.fromarray(np.uint8(sorted_image_array))

    # Save the sorted image
    sorted_image.save(output_image_path)

    print(f"Sorted image saved to {output_image_path}")

if __name__ == "__main__":
    input_image = sys.argv[1] if len(sys.argv) > 1 else None
    output_image = sys.argv[2] if len(sys.argv) > 2 else "output.jpg"

    if not input_image:
        print("Error: Please provide the input image path as the first argument.")
        sys.exit(1)

    sort_pixels_by_color(input_image, output_image)
